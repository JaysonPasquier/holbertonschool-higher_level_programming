The ``matrix_divided`` module
============================

Using ``matrix_divided``
-----------------------

Import function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Regular division:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Division by negative:
    >>> print(matrix_divided(matrix, -2))
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

Float division:
    >>> matrix = [[1.0, 2.0], [3.0, 4.0]]
    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0], [1.5, 2.0]]

Error cases:
    >>> print(matrix_divided(None, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, "4"]], 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, 4, 5]], 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2], [3, 4]], "2"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided([[1, 2], [3, 4]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
